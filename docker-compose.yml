version: '3.7'
networks:
  airflow:

services:
  redis:
    image: redis:5.0.5
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - 6379:6379
    networks:
      - airflow
  webserver:
    build:
      context: .
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8080:8080
    environment:
      - PYTHONPATH=/opt/airflow
    env_file:
      .env  
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    command:
      ["webserver"]
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: always
    depends_on:
      initdb:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - airflow
  scheduler:
    build:
      context: .
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      webserver:
        condition: service_started
    environment:
      - PYTHONPATH=/opt/airflow
    env_file:
      .env  
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    command: ["scheduler"]
    networks:
      - airflow
  flower:
    build:
      context: .
    ports:
      - 5555:5555
    volumes:
      - ./airflow/logs:/opt/airflow/logs
    environment:
      - PYTHONPATH=/opt/airflow
    env_file:
      - .env  
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    command: flower
    depends_on:
      redis:
        condition: service_started  
    networks:
      - airflow
  worker:
    build:
      context: .
    ports:
      - 8793:8793
    environment:
      - PYTHONPATH=/opt/airflow
    env_file:
      - .env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - /var/run/docker.sock:/var/run/docker.sock
    command: worker
    depends_on:
      scheduler:
        condition: service_started
    networks:
      - airflow
  initdb:
    build:
      context: .
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - ./airflow/entrypoint.sh:/opt/airflow/entrypoint.sh
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PYTHONPATH=/opt/airflow
      - ENABLED=False
    env_file:
      - .env
    entrypoint: /opt/airflow/entrypoint.sh
    healthcheck:
      test: "exit 0"
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    depends_on:
      redis:
        condition: service_started
    networks:
      - airflow

